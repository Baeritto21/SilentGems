buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'maven'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.5"
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply plugin: 'net.minecraftforge.gradle'

version = "${MC_VERSION}-${VERSION}"
group = "${GROUP}.${MODID}"
archivesBaseName = JAR_NAME

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: MCP_CHANNEL, version: MCP_MAPPINGS

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
//            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                silentgems {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                silentgems {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
//            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', MODID, '--all',
                    '--existing', file('src/main/resources').toString(),
                    '--existing', file('src/generated/resources').toString(),
                    '--output', file('src/generated/resources/')

            mods {
                silentgems {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

class Secrets {
    def data = null

    def getProperty(String key) {
        return data ? data[key] : ''
    }
}


import groovy.json.JsonSlurper

def secretFile
if (System.getenv().SECRET_FILE) {
    secretFile = file System.getenv().SECRET_FILE
} else {
    secretFile = file 'secret.json'
}

project.ext.secret = new Secrets()
if (secretFile.exists()) {
    secretFile.withReader {
        project.ext.secret.data = new JsonSlurper().parse it
    }
}

repositories {
    jcenter()
    mavenLocal()
    maven {
        url "https://dl.bintray.com/silentchaos512/silent-lib"
    }
    maven {
        url "https://dl.bintray.com/silentchaos512/silent-utils"
    }
    maven {
        url "https://dl.bintray.com/silentchaos512/silent-gear"
    }
    maven { // JEI
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven { // JEI
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven { // Curios
        url = "https://maven.theillusivec4.top/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${FORGE_VERSION}"

    compile fg.deobf("net.silentchaos512:silent-lib-${SILENT_LIB_VERSION}") {
        exclude module: "forge"
    }
    compile fg.deobf("net.silentchaos512:silent-gear-${SILENT_GEAR_VERSION}") {
        exclude module: 'forge'
        exclude module: 'jei-1.16.3'
        exclude module: 'silent-lib-1.16.3'
        exclude module: 'curios-forge'
        exclude module: 'Bookshelf-1.16.3'
        exclude module: 'GameStages-1.16.3'
        exclude module: 'World-Stripper'
    }

    if (project.hasProperty('token_enchanter_version')) {
        compileOnly fg.deobf("net.silentchaos512:token-enchanter-${TOKEN_ENCHANTER_VERSION}:api") {
            exclude module: 'forge'
            exclude module: 'jei-1.16.3'
            exclude module: 'silent-lib-1.16.3'
        }
        runtimeOnly fg.deobf("net.silentchaos512:token-enchanter-${TOKEN_ENCHANTER_VERSION}") {
            exclude module: 'forge'
            exclude module: 'jei-1.16.3'
            exclude module: 'silent-lib-1.16.3'
        }
    }

    // JEI
    if (project.hasProperty('JEI_VERSION')) {
        compileOnly fg.deobf("mezz.jei:jei-${JEI_VERSION}:api")
        runtimeOnly fg.deobf("mezz.jei:jei-${JEI_VERSION}")
    }

    // HWYLA
    if (project.hasProperty('HWYLA_VERSION')) {
        compileOnly "mcp.mobius.waila:Hwyla:${project.hwyla_version}"
    }

    // Curios
    if (project.hasProperty('CURIOS_VERSION')) {
        compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${project.curios_version}:api")
        runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${project.curios_version}")
    }
}

jar {
    manifest {
        attributes(["Specification-Title"     : MODNAME,
                    "Specification-Vendor"    : AUTHOR,
                    "Specification-Version"   : "1",
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : VERSION,
                    "Implementation-Vendor"   : AUTHOR,
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

task deobfJar(type: Jar) {
    classifier = 'deobf'
    from sourceSets.main.output
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.getDestinationDir()
}

artifacts {
    archives sourcesJar
}

// GPR/Maven publishing

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/silentchaos512/${REPO_NAME}")
            credentials {
                username = secret.github_username ?: System.getenv('github_username')
                password = secret.github_token ?: System.getenv('github_token')
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            group "${GROUP}"
            artifactId "${project.name}"
            version "${VERSION}"
            from(components.java)
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

curseforge {
    if (project.hasProperty('cf_project_id') && project.hasProperty('cf_release_type') && project.hasProperty('cf_changelog_filename') &&
            ((project.cf_release_type == 'alpha') || (project.cf_release_type == 'beta') || (project.cf_release_type == 'release'))) {
        apiKey = secret.curseforgeAPIKey
        project {
            id = project.cf_project_id
            changelog = file(project.cf_changelog_filename)
            releaseType = project.cf_release_type
            addGameVersion(MC_VERSION)
            addGameVersion('1.16.4')
            addGameVersion('1.16.5')
            mainArtifact(jar) {
                relations {
                    requiredDependency 'silent-lib'
                    optionalDependency 'silent-gear'
                    optionalDependency 'token-enchanter'
                }
            }
        }
    }
}
